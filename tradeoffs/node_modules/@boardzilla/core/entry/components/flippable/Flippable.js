import React from 'react';
import './assets/index.css';
/**
 * A Piece with two sides: front and back. When the Piece is hidden, the back is
 * shown. When visible, the front is shown. When the visibility changes, the CSS
 * animates a 3d flip.
 *
 * @example
 * import { Flippable } from '@boardzilla/core/components';
 * ...
 *   Piece.appearance({
 *     render: piece => (
 *       <Flippable>
 *         <Flippable.Front>{piece.name}</Flippable.Front>
 *         <Flippable.Back></Flippable.Back>
 *       </Flippable>
 *     );
 *   });
 * // The DOM structure inside the Piece element will be:
 *   <div class="bz-flippable">
 *     <div class="front">{piece.name}</div>
 *     <div class="back"></div>
 *   </div>
 */
const Flippable = ({ children }) => {
    let frontContent = null;
    let backContent = null;
    React.Children.forEach(children, child => {
        if (!React.isValidElement(child))
            return;
        if (child.type === Flippable.Front) {
            frontContent = child;
        }
        else if (child.type === Flippable.Back) {
            backContent = child;
        }
        else {
            throw Error("Flippable must contain only <Front/> and <Back/>");
        }
    });
    return (React.createElement("div", { className: 'bz-flippable' },
        React.createElement("div", { className: "front" }, frontContent),
        React.createElement("div", { className: "back" }, backContent)));
};
export default Flippable;
const Front = ({ children }) => children;
Flippable.Front = Front;
const Back = ({ children }) => children;
Flippable.Back = Back;
//# sourceMappingURL=Flippable.js.map