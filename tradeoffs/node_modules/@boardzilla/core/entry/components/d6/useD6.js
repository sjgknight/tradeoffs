import React, { useEffect, useRef, useState } from 'react';
import dice from './assets/dice.ogg';
import { times } from '../../utils.js';
import D6 from './d6.js';
import './assets/index.css';
/**
 * Adds an animated spinning appearance to the {@link D6} class
 *
 * @example
 * import { useD6 } from '@boardzilla/core/components';
 *
 * // then in the layout() method
 *     useD6(game);
 */
const D6Component = ({ die }) => {
    const diceAudio = useRef(null);
    const lastRollSequence = useRef();
    const [flip, setFlip] = useState(false);
    useEffect(() => {
        if (die.rollSequence === Math.ceil(die._ctx.gameManager.sequence - 1) && lastRollSequence.current !== undefined && lastRollSequence.current !== die.rollSequence) {
            diceAudio.current?.play();
            setFlip(!flip);
        }
        lastRollSequence.current = die.rollSequence;
    }, [die, die.rollSequence, flip, setFlip]);
    return (React.createElement(React.Fragment, null,
        React.createElement("audio", { ref: diceAudio, src: dice, id: "dice" }),
        React.createElement("ol", { "data-spin": flip ? 'up' : 'down' }, [1, 2, 3, 4, 5, 6].map(dots => (React.createElement("li", { key: dots, className: "die-face", "data-face": dots }, times(dots, d => React.createElement("span", { key: d, className: "dot" }))))))));
};
export default (game) => {
    game.all(D6).appearance({
        render: (die) => React.createElement(D6Component, { die: die }),
        aspectRatio: 1,
    });
};
//# sourceMappingURL=useD6.js.map