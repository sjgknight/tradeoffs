import WhileLoop from './while-loop.js';
export default class ForLoop extends WhileLoop {
    constructor({ name, initial, next, do: block, while: whileCondition }) {
        super({ do: block, while: () => true });
        this.type = 'loop';
        this.name = name;
        this.initial = initial;
        this.next = next;
        this.whileCondition = position => whileCondition(position.value);
    }
    currentBlock() {
        if (this.position.index !== -1)
            return this.block;
    }
    toString() {
        return `loop${this.name ? ":" + this.name : ""} (index: ${this.position.index}, value: ${this.position.value}${this.block instanceof Array ? ', item #' + this.sequence : ''})$`;
    }
    visualize(top) {
        return this.visualizeBlocks({
            type: 'forLoop',
            top,
            blocks: {
                do: this.block instanceof Array ? this.block : [this.block]
            },
            block: 'do',
            position: this.position?.value,
        });
    }
}
//# sourceMappingURL=for-loop.js.map