import SingleLayout from './single-layout.js';
/**
 * Abstract base class for all adjacency spaces
 */
export default class AdjacencySpace extends SingleLayout {
    constructor() {
        super(...arguments);
        this._ui = {
            layouts: [],
            appearance: {},
            getBaseLayout: () => ({
                sticky: true,
                alignment: 'center',
                direction: 'square'
            })
        };
    }
    isAdjacent(_el1, _el2) {
        throw Error("Abstract AdjacencySpace has no implementation");
    }
    _positionOf(element) {
        const positionedParent = this._positionedParentOf(element);
        return { column: positionedParent.column, row: positionedParent.row };
    }
    _positionedParentOf(element) {
        if (!element._t.parent)
            throw Error(`Element not found within adjacency space "${this.name}"`);
        return element._t.parent === this ? element : this._positionedParentOf(element._t.parent);
    }
    /**
     * Change the layout attributes for this space's layout.
     * @category UI
     */
    configureLayout(layoutConfiguration) {
        const keys = Object.keys(layoutConfiguration);
        if (keys.includes('scaling') || keys.includes('alignment')) {
            throw Error("Layouts for grids cannot have alignment, scaling");
        }
        super.configureLayout(layoutConfiguration);
    }
}
//# sourceMappingURL=adjacency-space.js.map